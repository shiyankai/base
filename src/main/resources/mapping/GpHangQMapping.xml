<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.syk.mapper.GpHangQMapper" >
  <resultMap id="BaseResultMap" type="cn.syk.entity.GpHangQ" >
    <result column="date" property="date" jdbcType="DATE" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="rate" property="rate" jdbcType="REAL" />
    <result column="total" property="total" jdbcType="DOUBLE" />
  </resultMap>
  <insert id="insert" parameterType="cn.syk.entity.GpHangQ" >
    insert into gphangqm (date, code, name, 
      rate, total)
    values (#{date,jdbcType=DATE}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{rate,jdbcType=REAL}, #{total,jdbcType=DOUBLE})
  </insert>

  <insert id="insertList" parameterType="cn.syk.entity.GpHangQ">
    insert into gphangqm (date, code, name,
    rate, total)
  VALUES
  <foreach collection ="list" item="gpHangQ" separator =",">
    (#{gpHangQ.date,jdbcType=DATE}, #{gpHangQ.code,jdbcType=VARCHAR}, #{gpHangQ.name,jdbcType=VARCHAR},
    #{gpHangQ.rate,jdbcType=REAL}, #{gpHangQ.total,jdbcType=DOUBLE})
  </foreach >
</insert>
<!--        collection：指定要遍历的集合：
        list类型的参数会特殊处理封装在map中，map的key就叫list
        item：将当前遍历出的元素赋值给指定的变量
        separator:每个元素之间的分隔符
        open：遍历出所有结果拼接一个开始的字符
        close:遍历出所有结果拼接一个结束的字符
        index:索引。遍历list的时候是index就是索引，item就是当前值
        遍历map的时候index表示的就是map的key，item就是map的值
        #{变量名}就能取出变量的值也就是当前遍历出的元素-->
  <insert id="insertSelective" parameterType="cn.syk.entity.GpHangQ" >
    insert into gphangqm
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="date != null" >
        date,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="rate != null" >
        rate,
      </if>
      <if test="total != null" >
        total,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="date != null" >
        #{date,jdbcType=DATE},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="rate != null" >
        #{rate,jdbcType=REAL},
      </if>
      <if test="total != null" >
        #{total,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
</mapper>